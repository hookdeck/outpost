name: "outpost-deps"

services:
  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: >
      redis-server
        --save 20 1
        --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis:/data

  # ============================== Log Store ==============================
  # clickhouse:
  #   image: clickhouse/clickhouse-server:24-alpine
  #   environment:
  #     CLICKHOUSE_DB: outpost
  #   ports:
  #     # tcp
  #     - 9000:9000
  #     # # http
  #     # - 8123:8123
  #     # # postgresql
  #     # - 9005:9005
  #   volumes:
  #     # optional to persist data locally
  #     - clickhouse:/var/lib/clickhouse/
  #     # optional to add own config
  #     # - ./extra-config.xml:/etc/clickhouse-server/config.d/extra-config.xml
  #     # optional to add users or enable settings for a default user
  #     # - ./user.xml:/etc/clickhouse-server/users.d/user.xml
  #     # qol to mount own sql scripts to run them from inside container with
  #     # clickhouse client < /sql/myquery.sql
  #     # - ./sql:/sql
  #   # adjust mem_limit and cpus to machine
  #   # mem_limit: 12G
  #   # cpus: 4
  #   ulimits:
  #     nofile:
  #       soft: 262144
  #       hard: 262144
  #   healthcheck:
  #     test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8123/ping"]
  #     interval: 1s
  #     timeout: 1s
  #     retries: 30

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=outpost
      - POSTGRES_PASSWORD=outpost
      - POSTGRES_DB=outpost
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  # ============================== MQs ==============================
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  aws:
    image: localstack/localstack:latest
    environment:
      - SERVICES=sns,sts,sqs
    ports:
      - 4566:4566
      - 4571:4571
    volumes:
      - aws:/var/lib/localstack

  gcp:
    image: google/cloud-sdk:latest
    command:
      [
        "gcloud",
        "beta",
        "emulators",
        "pubsub",
        "start",
        "--host-port=0.0.0.0:8085",
        "--project=test",
      ]
    ports:
      - "8085:8085"
    volumes:
      - gcp-config:/root/.config
      - gcp-kube:/root/.kube

volumes:
  redis:
    driver: local
  # clickhouse:
  #   driver: local
  postgres:
    driver: local
  rabbitmq:
    driver: local
  aws:
    driver: local
  gcp-config:
    driver: local
  gcp-kube:
    driver: local

networks:
  default:
    name: outpost
    external: true
