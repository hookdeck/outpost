name: outpost-example
services:
  api:
    image: hookdeck/outpost:latest
    env_file: .env
    depends_on:
      redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - ./config/outpost:/config/outpost
    environment:
      SERVICE: api

  delivery:
    image: hookdeck/outpost:latest
    env_file: .env
    depends_on:
      redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
    environment:
      SERVICE: delivery

  log:
    image: hookdeck/outpost:latest
    env_file: .env
    depends_on:
      redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
    environment:
      SERVICE: log

  redis:
    image: redis:7.4-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    command: >
      redis-server
        --save 20 1
        --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./data/redis:/data

  clickhouse:
    image: clickhouse/clickhouse-server:24-alpine
    environment:
      CLICKHOUSE_DB: outpost
    ports:
      # tcp
      - 9000:9000
      # # http
      # - 8123:8123
      # # postgresql
      # - 9005:9005
    volumes:
      # optional to persist data locally
      - ./data/clickhouse:/var/lib/clickhouse/
      # optional to add own config
      # - ./extra-config.xml:/etc/clickhouse-server/config.d/extra-config.xml
      # optional to add users or enable settings for a default user
      # - ./user.xml:/etc/clickhouse-server/users.d/user.xml
      # qol to mount own sql scripts to run them from inside container with
      # clickhouse client < /sql/myquery.sql
      # - ./sql:/sql
    # adjust mem_limit and cpus to machine
    # mem_limit: 12G
    # cpus: 4
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:8123/ping"]
      interval: 1s
      timeout: 1s
      retries: 30
