lockVersion: 2.0.0
id: f0627709-5a00-43ac-8678-ca716d6f379c
management:
  docChecksum: b861adfcca926bafba8ea408261b6b73
  docVersion: 0.0.1
  speakeasyVersion: 1.608.0
  generationVersion: 2.691.6
  releaseVersion: 0.4.0
  configChecksum: 43464e6037bc44205e4d81ff9337663b
  repoURL: https://github.com/hookdeck/outpost.git
  repoSubDirectory: sdks/outpost-go
  installationURL: https://github.com/hookdeck/outpost/sdks/outpost-go
features:
  go:
    additionalDependencies: 0.1.0
    additionalProperties: 0.1.2
    constsAndDefaults: 0.1.12
    core: 3.9.6
    defaultEnabledRetries: 0.2.0
    envVarSecurityUsage: 0.3.2
    flattening: 2.81.1
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.3
    globals: 2.82.2
    intellisenseMarkdownSupport: 0.1.0
    nameOverrides: 2.81.2
    nullables: 0.1.1
    responseFormat: 0.1.2
    retries: 2.84.2
    sdkHooks: 0.2.0
    unions: 2.85.14
generatedFiles:
  - .gitattributes
  - /models/apierrors/badrequesterror.go
  - /models/apierrors/internalservererror.go
  - /models/apierrors/notfounderror.go
  - /models/apierrors/ratelimitederror.go
  - /models/apierrors/timeouterror.go
  - /models/apierrors/unauthorizederror.go
  - /models/components/awskinesisconfig.go
  - /models/components/awskinesiscredentials.go
  - /models/components/awss3config.go
  - /models/components/awss3credentials.go
  - /models/components/awssqsconfig.go
  - /models/components/awssqscredentials.go
  - /models/components/azureservicebusconfig.go
  - /models/components/azureservicebuscredentials.go
  - /models/components/deliveryattempt.go
  - /models/components/destination.go
  - /models/components/destinationawskinesis.go
  - /models/components/destinationawss3.go
  - /models/components/destinationawssqs.go
  - /models/components/destinationazureservicebus.go
  - /models/components/destinationcreate.go
  - /models/components/destinationcreateawskinesis.go
  - /models/components/destinationcreateawss3.go
  - /models/components/destinationcreateawssqs.go
  - /models/components/destinationcreateazureservicebus.go
  - /models/components/destinationcreatehookdeck.go
  - /models/components/destinationcreaterabbitmq.go
  - /models/components/destinationcreatewebhook.go
  - /models/components/destinationhookdeck.go
  - /models/components/destinationrabbitmq.go
  - /models/components/destinationschemafield.go
  - /models/components/destinationtypeschema.go
  - /models/components/destinationupdate.go
  - /models/components/destinationupdateawskinesis.go
  - /models/components/destinationupdateawss3.go
  - /models/components/destinationupdateawssqs.go
  - /models/components/destinationupdatehookdeck.go
  - /models/components/destinationupdaterabbitmq.go
  - /models/components/destinationupdatewebhook.go
  - /models/components/destinationwebhook.go
  - /models/components/event.go
  - /models/components/hookdeckcredentials.go
  - /models/components/httpmetadata.go
  - /models/components/portalredirect.go
  - /models/components/publishrequest.go
  - /models/components/publishresponse.go
  - /models/components/rabbitmqconfig.go
  - /models/components/rabbitmqcredentials.go
  - /models/components/security.go
  - /models/components/successresponse.go
  - /models/components/tenant.go
  - /models/components/tenanttoken.go
  - /models/components/topics.go
  - /models/components/webhookconfig.go
  - /models/components/webhookcredentials.go
  - /models/components/webhookcredentialsupdate.go
  - /models/operations/createtenantdestination.go
  - /models/operations/deletetenant.go
  - /models/operations/deletetenantdestination.go
  - /models/operations/disabletenantdestination.go
  - /models/operations/enabletenantdestination.go
  - /models/operations/getdestinationtypeschema.go
  - /models/operations/gettenant.go
  - /models/operations/gettenantdestination.go
  - /models/operations/gettenantdestinationtypeschema.go
  - /models/operations/gettenantevent.go
  - /models/operations/gettenanteventbydestination.go
  - /models/operations/gettenantportalurl.go
  - /models/operations/gettenanttoken.go
  - /models/operations/healthcheck.go
  - /models/operations/listdestinationtypeschemasjwt.go
  - /models/operations/listtenantdestinations.go
  - /models/operations/listtenantdestinationtypeschemas.go
  - /models/operations/listtenanteventdeliveries.go
  - /models/operations/listtenantevents.go
  - /models/operations/listtenanteventsbydestination.go
  - /models/operations/listtenanttopics.go
  - /models/operations/listtopics.go
  - /models/operations/publishevent.go
  - /models/operations/retrytenantevent.go
  - /models/operations/updatetenantdestination.go
  - /models/operations/upserttenant.go
  - USAGE.md
  - destinations.go
  - docs/models/apierrors/badrequesterror.md
  - docs/models/apierrors/internalservererror.md
  - docs/models/apierrors/notfounderror.md
  - docs/models/apierrors/ratelimitederror.md
  - docs/models/apierrors/timeouterror.md
  - docs/models/apierrors/unauthorizederror.md
  - docs/models/components/awskinesisconfig.md
  - docs/models/components/awskinesiscredentials.md
  - docs/models/components/awss3config.md
  - docs/models/components/awss3credentials.md
  - docs/models/components/awssqsconfig.md
  - docs/models/components/awssqscredentials.md
  - docs/models/components/azureservicebusconfig.md
  - docs/models/components/azureservicebuscredentials.md
  - docs/models/components/deliveryattempt.md
  - docs/models/components/destination.md
  - docs/models/components/destinationawskinesis.md
  - docs/models/components/destinationawskinesistype.md
  - docs/models/components/destinationawss3.md
  - docs/models/components/destinationawss3type.md
  - docs/models/components/destinationawssqs.md
  - docs/models/components/destinationawssqstype.md
  - docs/models/components/destinationazureservicebus.md
  - docs/models/components/destinationazureservicebustype.md
  - docs/models/components/destinationcreate.md
  - docs/models/components/destinationcreateawskinesis.md
  - docs/models/components/destinationcreateawskinesistype.md
  - docs/models/components/destinationcreateawss3.md
  - docs/models/components/destinationcreateawss3type.md
  - docs/models/components/destinationcreateawssqs.md
  - docs/models/components/destinationcreateawssqstype.md
  - docs/models/components/destinationcreateazureservicebus.md
  - docs/models/components/destinationcreateazureservicebustype.md
  - docs/models/components/destinationcreatehookdeck.md
  - docs/models/components/destinationcreatehookdecktype.md
  - docs/models/components/destinationcreaterabbitmq.md
  - docs/models/components/destinationcreaterabbitmqtype.md
  - docs/models/components/destinationcreatewebhook.md
  - docs/models/components/destinationcreatewebhooktype.md
  - docs/models/components/destinationhookdeck.md
  - docs/models/components/destinationhookdecktype.md
  - docs/models/components/destinationrabbitmq.md
  - docs/models/components/destinationrabbitmqtype.md
  - docs/models/components/destinationschemafield.md
  - docs/models/components/destinationschemafieldtype.md
  - docs/models/components/destinationtypeschema.md
  - docs/models/components/destinationupdate.md
  - docs/models/components/destinationupdateawskinesis.md
  - docs/models/components/destinationupdateawss3.md
  - docs/models/components/destinationupdateawssqs.md
  - docs/models/components/destinationupdatehookdeck.md
  - docs/models/components/destinationupdaterabbitmq.md
  - docs/models/components/destinationupdatewebhook.md
  - docs/models/components/destinationwebhook.md
  - docs/models/components/destinationwebhooktype.md
  - docs/models/components/event.md
  - docs/models/components/hookdeckcredentials.md
  - docs/models/components/httpmetadata.md
  - docs/models/components/portalredirect.md
  - docs/models/components/publishrequest.md
  - docs/models/components/publishresponse.md
  - docs/models/components/rabbitmqconfig.md
  - docs/models/components/rabbitmqcredentials.md
  - docs/models/components/security.md
  - docs/models/components/status.md
  - docs/models/components/successresponse.md
  - docs/models/components/tenant.md
  - docs/models/components/tenanttoken.md
  - docs/models/components/tls.md
  - docs/models/components/topics.md
  - docs/models/components/topicsenum.md
  - docs/models/components/webhookconfig.md
  - docs/models/components/webhookcredentials.md
  - docs/models/components/webhookcredentialsupdate.md
  - docs/models/operations/createtenantdestinationglobals.md
  - docs/models/operations/createtenantdestinationrequest.md
  - docs/models/operations/createtenantdestinationresponse.md
  - docs/models/operations/deletetenantdestinationglobals.md
  - docs/models/operations/deletetenantdestinationrequest.md
  - docs/models/operations/deletetenantdestinationresponse.md
  - docs/models/operations/deletetenantglobals.md
  - docs/models/operations/deletetenantrequest.md
  - docs/models/operations/deletetenantresponse.md
  - docs/models/operations/destinationid.md
  - docs/models/operations/disabletenantdestinationglobals.md
  - docs/models/operations/disabletenantdestinationrequest.md
  - docs/models/operations/disabletenantdestinationresponse.md
  - docs/models/operations/enabletenantdestinationglobals.md
  - docs/models/operations/enabletenantdestinationrequest.md
  - docs/models/operations/enabletenantdestinationresponse.md
  - docs/models/operations/getdestinationtypeschemarequest.md
  - docs/models/operations/getdestinationtypeschemaresponse.md
  - docs/models/operations/getdestinationtypeschematype.md
  - docs/models/operations/gettenantdestinationglobals.md
  - docs/models/operations/gettenantdestinationrequest.md
  - docs/models/operations/gettenantdestinationresponse.md
  - docs/models/operations/gettenantdestinationtypeschemaglobals.md
  - docs/models/operations/gettenantdestinationtypeschemarequest.md
  - docs/models/operations/gettenantdestinationtypeschemaresponse.md
  - docs/models/operations/gettenantdestinationtypeschematype.md
  - docs/models/operations/gettenanteventbydestinationglobals.md
  - docs/models/operations/gettenanteventbydestinationrequest.md
  - docs/models/operations/gettenanteventbydestinationresponse.md
  - docs/models/operations/gettenanteventglobals.md
  - docs/models/operations/gettenanteventrequest.md
  - docs/models/operations/gettenanteventresponse.md
  - docs/models/operations/gettenantglobals.md
  - docs/models/operations/gettenantportalurlglobals.md
  - docs/models/operations/gettenantportalurlrequest.md
  - docs/models/operations/gettenantportalurlresponse.md
  - docs/models/operations/gettenantrequest.md
  - docs/models/operations/gettenantresponse.md
  - docs/models/operations/gettenanttokenglobals.md
  - docs/models/operations/gettenanttokenrequest.md
  - docs/models/operations/gettenanttokenresponse.md
  - docs/models/operations/healthcheckresponse.md
  - docs/models/operations/listdestinationtypeschemasjwtresponse.md
  - docs/models/operations/listtenantdestinationsglobals.md
  - docs/models/operations/listtenantdestinationsrequest.md
  - docs/models/operations/listtenantdestinationsresponse.md
  - docs/models/operations/listtenantdestinationstypeenum1.md
  - docs/models/operations/listtenantdestinationstypeenum2.md
  - docs/models/operations/listtenantdestinationtypeschemasglobals.md
  - docs/models/operations/listtenantdestinationtypeschemasrequest.md
  - docs/models/operations/listtenantdestinationtypeschemasresponse.md
  - docs/models/operations/listtenanteventdeliveriesglobals.md
  - docs/models/operations/listtenanteventdeliveriesrequest.md
  - docs/models/operations/listtenanteventdeliveriesresponse.md
  - docs/models/operations/listtenanteventsbydestinationglobals.md
  - docs/models/operations/listtenanteventsbydestinationrequest.md
  - docs/models/operations/listtenanteventsbydestinationresponse.md
  - docs/models/operations/listtenanteventsbydestinationresponsebody.md
  - docs/models/operations/listtenanteventsbydestinationstatus.md
  - docs/models/operations/listtenanteventsglobals.md
  - docs/models/operations/listtenanteventsrequest.md
  - docs/models/operations/listtenanteventsresponse.md
  - docs/models/operations/listtenanteventsresponsebody.md
  - docs/models/operations/listtenanteventsstatus.md
  - docs/models/operations/listtenanttopicsglobals.md
  - docs/models/operations/listtenanttopicsrequest.md
  - docs/models/operations/listtenanttopicsresponse.md
  - docs/models/operations/listtopicsresponse.md
  - docs/models/operations/option.md
  - docs/models/operations/publisheventresponse.md
  - docs/models/operations/retrytenanteventglobals.md
  - docs/models/operations/retrytenanteventrequest.md
  - docs/models/operations/retrytenanteventresponse.md
  - docs/models/operations/theme.md
  - docs/models/operations/topics.md
  - docs/models/operations/type.md
  - docs/models/operations/updatetenantdestinationglobals.md
  - docs/models/operations/updatetenantdestinationrequest.md
  - docs/models/operations/updatetenantdestinationresponse.md
  - docs/models/operations/updatetenantdestinationresponsebody.md
  - docs/models/operations/upserttenantglobals.md
  - docs/models/operations/upserttenantrequest.md
  - docs/models/operations/upserttenantresponse.md
  - docs/sdks/destinations/README.md
  - docs/sdks/events/README.md
  - docs/sdks/health/README.md
  - docs/sdks/outpost/README.md
  - docs/sdks/publish/README.md
  - docs/sdks/schemas/README.md
  - docs/sdks/tenants/README.md
  - docs/sdks/topics/README.md
  - events.go
  - go.mod
  - health.go
  - internal/config/sdkconfiguration.go
  - internal/globals/globals.go
  - internal/hooks/hooks.go
  - internal/utils/contenttype.go
  - internal/utils/env.go
  - internal/utils/form.go
  - internal/utils/headers.go
  - internal/utils/json.go
  - internal/utils/pathparams.go
  - internal/utils/queryparams.go
  - internal/utils/requestbody.go
  - internal/utils/retries.go
  - internal/utils/security.go
  - internal/utils/utils.go
  - models/apierrors/apierror.go
  - models/operations/options.go
  - outpost.go
  - publish.go
  - retry/config.go
  - schemas.go
  - tenants.go
  - topics.go
  - types/bigint.go
  - types/date.go
  - types/datetime.go
  - types/decimal.go
  - types/pointers.go
examples:
  healthCheck:
    speakeasy-default-health-check:
      responses:
        "200":
          text/plain: "<value>"
        "404":
          application/json: {}
        "401":
          application/json: {}
        "408":
          application/json: {}
        "429":
          application/json: {}
        "400":
          application/json: {}
        "504":
          application/json: {}
        "501":
          application/json: {}
        "500":
          application/json: {}
        "510":
          application/json: {}
        "511":
          application/json: {}
  upsertTenant:
    TenantExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: {"id": "tenant_123", "destinations_count": 5, "topics": ["user.created", "user.deleted"], "created_at": "2024-01-01T00:00:00Z"}
  getTenant:
    TenantExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: {"id": "tenant_123", "destinations_count": 5, "topics": ["user.created", "user.deleted"], "created_at": "2024-01-01T00:00:00Z"}
  deleteTenant:
    SuccessExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: {"success": true}
  getTenantPortalUrl:
    PortalRedirectExample:
      parameters:
        path:
          tenant_id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {"redirect_url": "https://webhooks.acme.com/?token=JWT_TOKEN"}
  getTenantToken:
    TenantTokenExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: {"token": "SOME_JWT_TOKEN"}
  listTenantDestinations:
    DestinationsListExample:
      parameters:
        path:
          tenant_id: "<id>"
        query: {}
      responses:
        "200":
          application/json: [{"id": "des_webhook_123", "type": "webhook", "topics": ["user.created", "order.shipped"], "disabled_at": null, "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/handler"}, "credentials": {"secret": "whsec_abc123def456", "previous_secret": "whsec_prev789xyz012", "previous_secret_invalid_at": "2024-02-16T10:00:00Z"}}, {"id": "des_sqs_456", "type": "aws_sqs", "topics": ["*"], "disabled_at": "2024-03-01T12:00:00Z", "created_at": "2024-02-20T11:30:00Z", "config": {"endpoint": "https://sqs.us-west-2.amazonaws.com", "queue_url": "https://sqs.us-west-2.amazonaws.com/123456789012/my-app-queue"}, "credentials": {"key": "AKIAIOSFODNN7EXAMPLE", "secret": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"}}, {"id": "des_s3_789", "type": "aws_s3", "topics": ["*"], "disabled_at": null, "created_at": "2024-03-20T12:00:00Z", "config": {"bucket": "my-bucket", "region": "us-east-1"}, "credentials": {"key": "AKIAIOSFODNN7EXAMPLE", "secret": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"}}]
  createTenantDestination:
    WebhookCreatedExample:
      parameters:
        path:
          tenant_id: "<id>"
      requestBody:
        application/json: {"id": "user-provided-id", "type": "rabbitmq", "topics": "*", "config": {"server_url": "localhost:5672", "exchange": "my-exchange", "tls": "false"}, "credentials": {"username": "guest", "password": "guest"}}
      responses:
        "201":
          application/json: {"id": "des_webhook_123", "type": "webhook", "topics": ["user.created", "order.shipped"], "disabled_at": null, "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/handler"}, "credentials": {"secret": "whsec_abc123def456"}}
  getTenantDestination:
    WebhookGetExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
      responses:
        "200":
          application/json: {"id": "des_webhook_123", "type": "webhook", "topics": ["user.created", "order.shipped"], "disabled_at": null, "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/handler"}, "credentials": {"secret": "whsec_abc123def456", "previous_secret": "whsec_prev789xyz012", "previous_secret_invalid_at": "2024-02-16T10:00:00Z"}}
  updateTenantDestination:
    DestinationUpdatedExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
      requestBody:
        application/json: {"topics": "*", "config": {"server_url": "localhost:5672", "exchange": "my-exchange", "tls": "false"}, "credentials": {"username": "guest", "password": "guest"}}
      responses:
        "200":
          application/json: {"id": "des_webhook_123", "type": "webhook", "topics": ["user.created"], "disabled_at": null, "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/new-handler"}, "credentials": {"secret": "whsec_abc123def456", "previous_secret": "whsec_prev789xyz012", "previous_secret_invalid_at": "2024-02-16T10:00:00Z"}}
  deleteTenantDestination:
    SuccessExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
      responses:
        "200":
          application/json: {"success": true}
  enableTenantDestination:
    WebhookEnabledExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
      responses:
        "200":
          application/json: {"id": "des_webhook_123", "type": "webhook", "topics": ["user.created", "order.shipped"], "disabled_at": null, "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/handler"}, "credentials": {"secret": "whsec_abc123def456", "previous_secret": "whsec_prev789xyz012", "previous_secret_invalid_at": "2024-02-16T10:00:00Z"}}
  disableTenantDestination:
    WebhookDisabledExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
      responses:
        "200":
          application/json: {"id": "des_webhook_123", "type": "webhook", "topics": ["user.created", "order.shipped"], "disabled_at": "2024-04-11T21:00:00Z", "created_at": "2024-02-15T10:00:00Z", "config": {"url": "https://my-service.com/webhook/handler"}, "credentials": {"secret": "whsec_abc123def456", "previous_secret": "whsec_prev789xyz012", "previous_secret_invalid_at": "2024-02-16T10:00:00Z"}}
  publishEvent:
    speakeasy-default-publish-event:
      requestBody:
        application/json: {"id": "evt_custom_123", "tenant_id": "<TENANT_ID>", "destination_id": "<DESTINATION_ID>", "topic": "topic.name", "metadata": {"source": "crm"}, "data": {"user_id": "userid", "status": "active"}}
      responses:
        "404":
          application/json: {}
        "403":
          application/json: {}
        "408":
          application/json: {}
        "429":
          application/json: {}
        "413":
          application/json: {}
        "504":
          application/json: {}
        "501":
          application/json: {}
        "500":
          application/json: {}
        "510":
          application/json: {}
        "511":
          application/json: {}
        "202":
          application/json: {"id": "evt_abc123xyz789"}
  listTenantDestinationTypeSchemas:
    DestinationTypesExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: [{"type": "webhook", "label": "Webhook", "description": "Send event via an HTTP POST request to a URL", "icon": "<svg />", "instructions": "Enter the URL...", "config_fields": [{"type": "text", "label": "URL", "description": "The URL to send the webhook to.", "required": true, "pattern": "^https?://.*"}], "credential_fields": [{"type": "text", "label": "Secret", "description": "Optional signing secret.", "required": false, "sensitive": true}]}, {"type": "aws_sqs", "label": "AWS SQS", "description": "Send event to an AWS SQS queue", "icon": "<svg />", "instructions": "Enter Queue URL...", "config_fields": [{"type": "text", "label": "Queue URL", "description": "The URL of the SQS queue.", "required": true}, {"type": "text", "label": "Endpoint", "description": "Optional custom AWS endpoint URL.", "required": false}], "credential_fields": [{"type": "text", "label": "Key", "description": "AWS Access Key ID.", "required": true, "sensitive": true}, {"type": "text", "label": "Secret", "description": "AWS Secret Access Key.", "required": true, "sensitive": true}, {"type": "text", "label": "Session", "description": "Optional AWS Session Token.", "required": false, "sensitive": true}]}, {"type": "aws_s3", "label": "AWS S3", "description": "Store events in an Amazon S3 bucket", "icon": "<svg />", "instructions": "Enter bucket and region...", "config_fields": [{"type": "text", "label": "Bucket Name", "description": "The name of the S3 bucket.", "required": true}, {"type": "text", "label": "AWS Region", "description": "The AWS region where the bucket is located.", "required": true}], "credential_fields": [{"type": "text", "label": "Key", "description": "AWS Access Key ID.", "required": true, "sensitive": true}, {"type": "text", "label": "Secret", "description": "AWS Secret Access Key.", "required": true, "sensitive": true}]}, {"type": "aws_s3", "label": "AWS S3", "description": "Store events in an Amazon S3 bucket", "icon": "<svg />", "instructions": "Enter bucket and region...", "config_fields": [{"type": "text", "label": "Bucket Name", "description": "The name of the S3 bucket.", "required": true}, {"type": "text", "label": "AWS Region", "description": "The AWS region where the bucket is located.", "required": true}], "credential_fields": [{"type": "text", "label": "Key", "description": "AWS Access Key ID.", "required": true, "sensitive": true}, {"type": "text", "label": "Secret", "description": "AWS Secret Access Key.", "required": true, "sensitive": true}]}]
  getTenantDestinationTypeSchema:
    WebhookSchemaExample:
      parameters:
        path:
          tenant_id: "<id>"
          type: "hookdeck"
      responses:
        "200":
          application/json: {"type": "webhook", "label": "Webhook", "description": "Send event via an HTTP POST request to a URL", "icon": "<svg />", "instructions": "Enter the URL...", "config_fields": [{"type": "text", "label": "URL", "description": "The URL to send the webhook to.", "required": true, "pattern": "^https?://.*"}], "credential_fields": [{"type": "text", "label": "Secret", "description": "Optional signing secret.", "required": false, "sensitive": true}]}
  listDestinationTypeSchemasJwt:
    DestinationTypesExample:
      responses:
        "200":
          application/json: [{"type": "webhook", "label": "Webhook", "description": "Send event via an HTTP POST request to a URL", "icon": "<svg />", "instructions": "Enter the URL...", "config_fields": [{"type": "text", "label": "URL", "description": "The URL to send the webhook to.", "required": true, "pattern": "^https?://.*"}], "credential_fields": [{"type": "text", "label": "Secret", "description": "Optional signing secret.", "required": false, "sensitive": true}]}, {"type": "aws_sqs", "label": "AWS SQS", "description": "Send event to an AWS SQS queue", "icon": "<svg />", "instructions": "Enter Queue URL...", "config_fields": [{"type": "text", "label": "Queue URL", "description": "The URL of the SQS queue.", "required": true}, {"type": "text", "label": "Endpoint", "description": "Optional custom AWS endpoint URL.", "required": false}], "credential_fields": [{"type": "text", "label": "Key", "description": "AWS Access Key ID.", "required": true, "sensitive": true}, {"type": "text", "label": "Secret", "description": "AWS Secret Access Key.", "required": true, "sensitive": true}, {"type": "text", "label": "Session", "description": "Optional AWS Session Token.", "required": false, "sensitive": true}]}]
  getDestinationTypeSchema:
    WebhookSchemaExample:
      parameters:
        path:
          type: "rabbitmq"
      responses:
        "200":
          application/json: {"type": "webhook", "label": "Webhook", "description": "Send event via an HTTP POST request to a URL", "icon": "<svg />", "instructions": "Enter the URL...", "config_fields": [{"type": "text", "label": "URL", "description": "The URL to send the webhook to.", "required": true, "pattern": "^https?://.*"}], "credential_fields": [{"type": "text", "label": "Secret", "description": "Optional signing secret.", "required": false, "sensitive": true}]}
  listTenantTopics:
    TopicsListExample:
      parameters:
        path:
          tenant_id: "<id>"
      responses:
        "200":
          application/json: ["user.created", "user.updated", "order.shipped", "inventory.updated"]
  listTopics:
    TopicsListExample:
      responses:
        "200":
          application/json: ["user.created", "user.updated", "order.shipped", "inventory.updated"]
  listTenantEvents:
    EventsListExample:
      parameters:
        path:
          tenant_id: "<id>"
        query:
          limit: 100
      responses:
        "200":
          application/json: {"count": 2, "data": [{"id": "evt_123", "destination_id": "des_456", "topic": "user.created", "time": "2024-01-01T00:00:00Z", "successful_at": "2024-01-01T00:00:05Z", "metadata": {"source": "crm"}, "data": {"user_id": "userid", "status": "active"}}, {"id": "evt_789", "destination_id": "des_456", "topic": "order.shipped", "time": "2024-01-02T10:00:00Z", "successful_at": null, "metadata": {"source": "oms"}, "data": {"order_id": "orderid", "tracking": "1Z..."}}], "next": "", "prev": ""}
  getTenantEvent:
    EventExample:
      parameters:
        path:
          tenant_id: "<id>"
          event_id: "<id>"
      responses:
        "200":
          application/json: {"id": "evt_123", "destination_id": "des_456", "topic": "user.created", "time": "2024-01-01T00:00:00Z", "successful_at": "2024-01-01T00:00:05Z", "metadata": {"source": "crm"}, "data": {"user_id": "userid", "status": "active"}}
  listTenantEventDeliveries:
    DeliveriesListExample:
      parameters:
        path:
          tenant_id: "<id>"
          event_id: "<id>"
      responses:
        "200":
          application/json: [{"delivered_at": "2024-01-01T00:00:05Z", "status": "success", "response_status_code": 200, "response_body": "{\"status\":\"ok\"}", "response_headers": {"content-type": "application/json"}}, {"delivered_at": "2024-01-01T00:00:01Z", "status": "failed", "response_status_code": 503, "response_body": "Service Unavailable", "response_headers": {"content-type": "text/plain"}}]
  listTenantEventsByDestination:
    EventsListExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
        query:
          limit: 100
      responses:
        "200":
          application/json: {"count": 2, "data": [{"id": "evt_123", "destination_id": "des_456", "topic": "user.created", "time": "2024-01-01T00:00:00Z", "successful_at": "2024-01-01T00:00:05Z", "metadata": {"source": "crm"}, "data": {"user_id": "userid", "status": "active"}}, {"id": "evt_789", "destination_id": "des_456", "topic": "order.shipped", "time": "2024-01-02T10:00:00Z", "successful_at": null, "metadata": {"source": "oms"}, "data": {"order_id": "orderid", "tracking": "1Z..."}}], "next": "", "prev": ""}
  getTenantEventByDestination:
    EventExample:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
          event_id: "<id>"
      responses:
        "200":
          application/json: {"id": "evt_123", "destination_id": "des_456", "topic": "user.created", "time": "2024-01-01T00:00:00Z", "successful_at": "2024-01-01T00:00:05Z", "metadata": {"source": "crm"}, "data": {"user_id": "userid", "status": "active"}}
  retryTenantEvent:
    speakeasy-default-retry-tenant-event:
      parameters:
        path:
          tenant_id: "<id>"
          destination_id: "<id>"
          event_id: "<id>"
      responses:
        "401":
          application/json: {}
        "408":
          application/json: {}
        "429":
          application/json: {}
        "400":
          application/json: {}
        "504":
          application/json: {}
        "501":
          application/json: {}
        "500":
          application/json: {}
        "510":
          application/json: {}
        "511":
          application/json: {}
examplesVersion: 1.0.2
generatedTests: {}
releaseNotes: "## Go SDK Changes Detected:\n* `Outpost.Events.List()`: \n  *  `request` **Changed** **Breaking** :warning:\n  *  `response` **Changed** **Breaking** :warning:\n* `Outpost.Events.ListByDestination()`: \n  *  `request` **Changed** **Breaking** :warning:\n  *  `response` **Changed** **Breaking** :warning:\n* `Outpost.Destinations.List()`: \n  *  `request.Type` **Changed**\n  *  `response.[].[awsS3]` **Added**\n* `Outpost.Destinations.Create()`: \n  *  `request.DestinationCreate.[awsS3]` **Added**\n  *  `response.[awsS3]` **Added**\n* `Outpost.Destinations.Get()`:  `response.[awsS3]` **Added**\n* `Outpost.Destinations.Update()`: \n  *  `request.DestinationUpdate.[destinationUpdateAwss3]` **Added**\n  *  `response.[destination].[awsS3]` **Added**\n* `Outpost.Destinations.Enable()`:  `response.[awsS3]` **Added**\n* `Outpost.Destinations.Disable()`:  `response.[awsS3]` **Added**\n* `Outpost.Schemas.Get()`:  `request.Type` **Changed**\n* `Outpost.Schemas.GetDestinationTypeJwt()`:  `request.Type` **Changed**\n"
