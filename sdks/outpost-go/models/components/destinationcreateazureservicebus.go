// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DestinationCreateAzureServiceBusType - Type of the destination. Must be 'azure_servicebus'.
type DestinationCreateAzureServiceBusType string

const (
	DestinationCreateAzureServiceBusTypeAzureServicebus DestinationCreateAzureServiceBusType = "azure_servicebus"
)

func (e DestinationCreateAzureServiceBusType) ToPointer() *DestinationCreateAzureServiceBusType {
	return &e
}
func (e *DestinationCreateAzureServiceBusType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "azure_servicebus":
		*e = DestinationCreateAzureServiceBusType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationCreateAzureServiceBusType: %v", v)
	}
}

type DestinationCreateAzureServiceBus struct {
	// Optional user-provided ID. A UUID will be generated if empty.
	ID *string `json:"id,omitempty"`
	// Type of the destination. Must be 'azure_servicebus'.
	Type DestinationCreateAzureServiceBusType `json:"type"`
	// "*" or an array of enabled topics.
	Topics      Topics                     `json:"topics"`
	Config      AzureServiceBusConfig      `json:"config"`
	Credentials AzureServiceBusCredentials `json:"credentials"`
}

func (o *DestinationCreateAzureServiceBus) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DestinationCreateAzureServiceBus) GetType() DestinationCreateAzureServiceBusType {
	if o == nil {
		return DestinationCreateAzureServiceBusType("")
	}
	return o.Type
}

func (o *DestinationCreateAzureServiceBus) GetTopics() Topics {
	if o == nil {
		return Topics{}
	}
	return o.Topics
}

func (o *DestinationCreateAzureServiceBus) GetConfig() AzureServiceBusConfig {
	if o == nil {
		return AzureServiceBusConfig{}
	}
	return o.Config
}

func (o *DestinationCreateAzureServiceBus) GetCredentials() AzureServiceBusCredentials {
	if o == nil {
		return AzureServiceBusCredentials{}
	}
	return o.Credentials
}
