// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/hookdeck/outpost/sdks/outpost-go/internal/utils"
	"time"
)

// DestinationAwss3Type - Type of the destination.
type DestinationAwss3Type string

const (
	DestinationAwss3TypeAwsS3 DestinationAwss3Type = "aws_s3"
)

func (e DestinationAwss3Type) ToPointer() *DestinationAwss3Type {
	return &e
}
func (e *DestinationAwss3Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws_s3":
		*e = DestinationAwss3Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationAwss3Type: %v", v)
	}
}

type DestinationAwss3 struct {
	// Control plane generated ID or user provided ID for the destination.
	ID string `json:"id"`
	// Type of the destination.
	Type DestinationAwss3Type `json:"type"`
	// "*" or an array of enabled topics.
	Topics Topics `json:"topics"`
	// ISO Date when the destination was disabled, or null if enabled.
	DisabledAt *time.Time `json:"disabled_at"`
	// ISO Date when the destination was created.
	CreatedAt   time.Time        `json:"created_at"`
	Config      Awss3Config      `json:"config"`
	Credentials Awss3Credentials `json:"credentials"`
	// A human-readable representation of the destination target (bucket and region). Read-only.
	Target *string `json:"target,omitempty"`
	// A URL link to the destination target (AWS Console link to the bucket). Read-only.
	TargetURL *string `json:"target_url,omitempty"`
}

func (d DestinationAwss3) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DestinationAwss3) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"id", "type", "topics", "disabled_at", "created_at", "config", "credentials"}); err != nil {
		return err
	}
	return nil
}

func (o *DestinationAwss3) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DestinationAwss3) GetType() DestinationAwss3Type {
	if o == nil {
		return DestinationAwss3Type("")
	}
	return o.Type
}

func (o *DestinationAwss3) GetTopics() Topics {
	if o == nil {
		return Topics{}
	}
	return o.Topics
}

func (o *DestinationAwss3) GetDisabledAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.DisabledAt
}

func (o *DestinationAwss3) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *DestinationAwss3) GetConfig() Awss3Config {
	if o == nil {
		return Awss3Config{}
	}
	return o.Config
}

func (o *DestinationAwss3) GetCredentials() Awss3Credentials {
	if o == nil {
		return Awss3Credentials{}
	}
	return o.Credentials
}

func (o *DestinationAwss3) GetTarget() *string {
	if o == nil {
		return nil
	}
	return o.Target
}

func (o *DestinationAwss3) GetTargetURL() *string {
	if o == nil {
		return nil
	}
	return o.TargetURL
}
