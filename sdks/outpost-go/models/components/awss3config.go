// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/hookdeck/outpost/sdks/outpost-go/internal/utils"
)

type Awss3Config struct {
	// The name of your AWS S3 bucket.
	Bucket string `json:"bucket"`
	// The AWS region where your bucket is located.
	Region string `json:"region"`
	// JMESPath expression for generating S3 object keys. Default is join('', [time.rfc3339_nano, '_', metadata."event-id", '.json']).
	KeyTemplate *string `json:"key_template,omitempty"`
	// The storage class for the S3 objects (e.g., STANDARD, INTELLIGENT_TIERING, GLACIER, etc.). Defaults to "STANDARD".
	StorageClass *string `json:"storage_class,omitempty"`
}

func (a Awss3Config) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *Awss3Config) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"bucket", "region"}); err != nil {
		return err
	}
	return nil
}

func (o *Awss3Config) GetBucket() string {
	if o == nil {
		return ""
	}
	return o.Bucket
}

func (o *Awss3Config) GetRegion() string {
	if o == nil {
		return ""
	}
	return o.Region
}

func (o *Awss3Config) GetKeyTemplate() *string {
	if o == nil {
		return nil
	}
	return o.KeyTemplate
}

func (o *Awss3Config) GetStorageClass() *string {
	if o == nil {
		return nil
	}
	return o.StorageClass
}
