// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/hookdeck/outpost/sdks/outpost-go/internal/utils"
	"time"
)

type Tenant struct {
	// User-defined system ID for the tenant.
	ID *string `json:"id,omitempty"`
	// Number of destinations associated with the tenant.
	DestinationsCount *int64 `json:"destinations_count,omitempty"`
	// List of subscribed topics across all destinations for this tenant.
	Topics []string `json:"topics,omitempty"`
	// ISO Date when the tenant was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
}

func (t Tenant) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *Tenant) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *Tenant) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Tenant) GetDestinationsCount() *int64 {
	if o == nil {
		return nil
	}
	return o.DestinationsCount
}

func (o *Tenant) GetTopics() []string {
	if o == nil {
		return nil
	}
	return o.Topics
}

func (o *Tenant) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}
