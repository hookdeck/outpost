// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/hookdeck/outpost/sdks/outpost-go/internal/utils"
)

// DestinationCreateAWSSQSType - Type of the destination. Must be 'aws_sqs'.
type DestinationCreateAWSSQSType string

const (
	DestinationCreateAWSSQSTypeAwsSqs DestinationCreateAWSSQSType = "aws_sqs"
)

func (e DestinationCreateAWSSQSType) ToPointer() *DestinationCreateAWSSQSType {
	return &e
}
func (e *DestinationCreateAWSSQSType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws_sqs":
		*e = DestinationCreateAWSSQSType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationCreateAWSSQSType: %v", v)
	}
}

type DestinationCreateAWSSQS struct {
	// Optional user-provided ID. A UUID will be generated if empty.
	ID *string `json:"id,omitempty"`
	// Type of the destination. Must be 'aws_sqs'.
	Type DestinationCreateAWSSQSType `json:"type"`
	// "*" or an array of enabled topics.
	Topics      Topics            `json:"topics"`
	Config      AWSSQSConfig      `json:"config"`
	Credentials AWSSQSCredentials `json:"credentials"`
}

func (d DestinationCreateAWSSQS) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DestinationCreateAWSSQS) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"type", "topics", "config", "credentials"}); err != nil {
		return err
	}
	return nil
}

func (o *DestinationCreateAWSSQS) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DestinationCreateAWSSQS) GetType() DestinationCreateAWSSQSType {
	if o == nil {
		return DestinationCreateAWSSQSType("")
	}
	return o.Type
}

func (o *DestinationCreateAWSSQS) GetTopics() Topics {
	if o == nil {
		return Topics{}
	}
	return o.Topics
}

func (o *DestinationCreateAWSSQS) GetConfig() AWSSQSConfig {
	if o == nil {
		return AWSSQSConfig{}
	}
	return o.Config
}

func (o *DestinationCreateAWSSQS) GetCredentials() AWSSQSCredentials {
	if o == nil {
		return AWSSQSCredentials{}
	}
	return o.Credentials
}
