// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/hookdeck/outpost/sdks/outpost-go/internal/utils"
	"time"
)

type Event struct {
	ID            *string `json:"id,omitempty"`
	DestinationID *string `json:"destination_id,omitempty"`
	Topic         *string `json:"topic,omitempty"`
	// Time the event was received/processed.
	Time *time.Time `json:"time,omitempty"`
	// Time the event was successfully delivered.
	SuccessfulAt *time.Time `json:"successful_at,omitempty"`
	// Key-value string pairs of metadata associated with the event.
	Metadata map[string]string `json:"metadata,omitempty"`
	// Freeform JSON data of the event.
	Data map[string]any `json:"data,omitempty"`
}

func (e Event) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *Event) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *Event) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *Event) GetDestinationID() *string {
	if o == nil {
		return nil
	}
	return o.DestinationID
}

func (o *Event) GetTopic() *string {
	if o == nil {
		return nil
	}
	return o.Topic
}

func (o *Event) GetTime() *time.Time {
	if o == nil {
		return nil
	}
	return o.Time
}

func (o *Event) GetSuccessfulAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.SuccessfulAt
}

func (o *Event) GetMetadata() map[string]string {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *Event) GetData() map[string]any {
	if o == nil {
		return nil
	}
	return o.Data
}
