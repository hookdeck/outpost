// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/hookdeck/outpost/sdks/go/client/models/components"
)

// GetDestinationTypeSchemaType - The type of the destination.
type GetDestinationTypeSchemaType string

const (
	GetDestinationTypeSchemaTypeWebhook    GetDestinationTypeSchemaType = "webhook"
	GetDestinationTypeSchemaTypeAwsSqs     GetDestinationTypeSchemaType = "aws_sqs"
	GetDestinationTypeSchemaTypeRabbitmq   GetDestinationTypeSchemaType = "rabbitmq"
	GetDestinationTypeSchemaTypeHookdeck   GetDestinationTypeSchemaType = "hookdeck"
	GetDestinationTypeSchemaTypeAwsKinesis GetDestinationTypeSchemaType = "aws_kinesis"
)

func (e GetDestinationTypeSchemaType) ToPointer() *GetDestinationTypeSchemaType {
	return &e
}
func (e *GetDestinationTypeSchemaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "webhook":
		fallthrough
	case "aws_sqs":
		fallthrough
	case "rabbitmq":
		fallthrough
	case "hookdeck":
		fallthrough
	case "aws_kinesis":
		*e = GetDestinationTypeSchemaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDestinationTypeSchemaType: %v", v)
	}
}

type GetDestinationTypeSchemaRequest struct {
	// The type of the destination.
	Type GetDestinationTypeSchemaType `pathParam:"style=simple,explode=false,name=type"`
}

func (o *GetDestinationTypeSchemaRequest) GetType() GetDestinationTypeSchemaType {
	if o == nil {
		return GetDestinationTypeSchemaType("")
	}
	return o.Type
}

type GetDestinationTypeSchemaResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The schema for the specified destination type.
	DestinationTypeSchema *components.DestinationTypeSchema
}

func (o *GetDestinationTypeSchemaResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDestinationTypeSchemaResponse) GetDestinationTypeSchema() *components.DestinationTypeSchema {
	if o == nil {
		return nil
	}
	return o.DestinationTypeSchema
}
