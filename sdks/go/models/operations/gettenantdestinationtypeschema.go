// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/hookdeck/outpost/sdks/go/client/models/components"
)

type GetTenantDestinationTypeSchemaGlobals struct {
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
}

func (o *GetTenantDestinationTypeSchemaGlobals) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

// GetTenantDestinationTypeSchemaType - The type of the destination.
type GetTenantDestinationTypeSchemaType string

const (
	GetTenantDestinationTypeSchemaTypeWebhook    GetTenantDestinationTypeSchemaType = "webhook"
	GetTenantDestinationTypeSchemaTypeAwsSqs     GetTenantDestinationTypeSchemaType = "aws_sqs"
	GetTenantDestinationTypeSchemaTypeRabbitmq   GetTenantDestinationTypeSchemaType = "rabbitmq"
	GetTenantDestinationTypeSchemaTypeHookdeck   GetTenantDestinationTypeSchemaType = "hookdeck"
	GetTenantDestinationTypeSchemaTypeAwsKinesis GetTenantDestinationTypeSchemaType = "aws_kinesis"
)

func (e GetTenantDestinationTypeSchemaType) ToPointer() *GetTenantDestinationTypeSchemaType {
	return &e
}
func (e *GetTenantDestinationTypeSchemaType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "webhook":
		fallthrough
	case "aws_sqs":
		fallthrough
	case "rabbitmq":
		fallthrough
	case "hookdeck":
		fallthrough
	case "aws_kinesis":
		*e = GetTenantDestinationTypeSchemaType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTenantDestinationTypeSchemaType: %v", v)
	}
}

type GetTenantDestinationTypeSchemaRequest struct {
	// The ID of the tenant. Required when using AdminApiKey authentication.
	TenantID *string `pathParam:"style=simple,explode=false,name=tenant_id"`
	// The type of the destination.
	Type GetTenantDestinationTypeSchemaType `pathParam:"style=simple,explode=false,name=type"`
}

func (o *GetTenantDestinationTypeSchemaRequest) GetTenantID() *string {
	if o == nil {
		return nil
	}
	return o.TenantID
}

func (o *GetTenantDestinationTypeSchemaRequest) GetType() GetTenantDestinationTypeSchemaType {
	if o == nil {
		return GetTenantDestinationTypeSchemaType("")
	}
	return o.Type
}

type GetTenantDestinationTypeSchemaResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The schema for the specified destination type.
	DestinationTypeSchema *components.DestinationTypeSchema
}

func (o *GetTenantDestinationTypeSchemaResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetTenantDestinationTypeSchemaResponse) GetDestinationTypeSchema() *components.DestinationTypeSchema {
	if o == nil {
		return nil
	}
	return o.DestinationTypeSchema
}
