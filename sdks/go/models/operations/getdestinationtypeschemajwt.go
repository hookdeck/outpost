// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"openapi/models/components"
)

type GetDestinationTypeSchemaJwtSecurity struct {
	TenantJwt string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

func (o *GetDestinationTypeSchemaJwtSecurity) GetTenantJwt() string {
	if o == nil {
		return ""
	}
	return o.TenantJwt
}

// GetDestinationTypeSchemaJwtType - The type of the destination.
type GetDestinationTypeSchemaJwtType string

const (
	GetDestinationTypeSchemaJwtTypeWebhook    GetDestinationTypeSchemaJwtType = "webhook"
	GetDestinationTypeSchemaJwtTypeAwsSqs     GetDestinationTypeSchemaJwtType = "aws_sqs"
	GetDestinationTypeSchemaJwtTypeRabbitmq   GetDestinationTypeSchemaJwtType = "rabbitmq"
	GetDestinationTypeSchemaJwtTypeHookdeck   GetDestinationTypeSchemaJwtType = "hookdeck"
	GetDestinationTypeSchemaJwtTypeAwsKinesis GetDestinationTypeSchemaJwtType = "aws_kinesis"
)

func (e GetDestinationTypeSchemaJwtType) ToPointer() *GetDestinationTypeSchemaJwtType {
	return &e
}
func (e *GetDestinationTypeSchemaJwtType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "webhook":
		fallthrough
	case "aws_sqs":
		fallthrough
	case "rabbitmq":
		fallthrough
	case "hookdeck":
		fallthrough
	case "aws_kinesis":
		*e = GetDestinationTypeSchemaJwtType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDestinationTypeSchemaJwtType: %v", v)
	}
}

type GetDestinationTypeSchemaJwtRequest struct {
	// The type of the destination.
	Type GetDestinationTypeSchemaJwtType `pathParam:"style=simple,explode=false,name=type"`
}

func (o *GetDestinationTypeSchemaJwtRequest) GetType() GetDestinationTypeSchemaJwtType {
	if o == nil {
		return GetDestinationTypeSchemaJwtType("")
	}
	return o.Type
}

type GetDestinationTypeSchemaJwtResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// The schema for the specified destination type.
	DestinationTypeSchema *components.DestinationTypeSchema
}

func (o *GetDestinationTypeSchemaJwtResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetDestinationTypeSchemaJwtResponse) GetDestinationTypeSchema() *components.DestinationTypeSchema {
	if o == nil {
		return nil
	}
	return o.DestinationTypeSchema
}
