// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type DestinationSchemaFieldType string

const (
	DestinationSchemaFieldTypeText     DestinationSchemaFieldType = "text"
	DestinationSchemaFieldTypeCheckbox DestinationSchemaFieldType = "checkbox"
)

func (e DestinationSchemaFieldType) ToPointer() *DestinationSchemaFieldType {
	return &e
}
func (e *DestinationSchemaFieldType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		fallthrough
	case "checkbox":
		*e = DestinationSchemaFieldType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationSchemaFieldType: %v", v)
	}
}

type DestinationSchemaField struct {
	Type        DestinationSchemaFieldType `json:"type"`
	Label       *string                    `json:"label,omitempty"`
	Description *string                    `json:"description,omitempty"`
	Required    bool                       `json:"required"`
	// Indicates if the field contains sensitive information.
	Sensitive *bool `json:"sensitive,omitempty"`
	// Default value for the field.
	Default *string `json:"default,omitempty"`
	// Minimum length for a text input.
	Minlength *int64 `json:"minlength,omitempty"`
	// Maximum length for a text input.
	Maxlength *int64 `json:"maxlength,omitempty"`
	// Regex pattern for validation (compatible with HTML5 pattern attribute).
	Pattern *string `json:"pattern,omitempty"`
}

func (o *DestinationSchemaField) GetType() DestinationSchemaFieldType {
	if o == nil {
		return DestinationSchemaFieldType("")
	}
	return o.Type
}

func (o *DestinationSchemaField) GetLabel() *string {
	if o == nil {
		return nil
	}
	return o.Label
}

func (o *DestinationSchemaField) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DestinationSchemaField) GetRequired() bool {
	if o == nil {
		return false
	}
	return o.Required
}

func (o *DestinationSchemaField) GetSensitive() *bool {
	if o == nil {
		return nil
	}
	return o.Sensitive
}

func (o *DestinationSchemaField) GetDefault() *string {
	if o == nil {
		return nil
	}
	return o.Default
}

func (o *DestinationSchemaField) GetMinlength() *int64 {
	if o == nil {
		return nil
	}
	return o.Minlength
}

func (o *DestinationSchemaField) GetMaxlength() *int64 {
	if o == nil {
		return nil
	}
	return o.Maxlength
}

func (o *DestinationSchemaField) GetPattern() *string {
	if o == nil {
		return nil
	}
	return o.Pattern
}
