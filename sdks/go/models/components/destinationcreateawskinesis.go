// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// DestinationCreateAWSKinesisType - Type of the destination. Must be 'aws_kinesis'.
type DestinationCreateAWSKinesisType string

const (
	DestinationCreateAWSKinesisTypeAwsKinesis DestinationCreateAWSKinesisType = "aws_kinesis"
)

func (e DestinationCreateAWSKinesisType) ToPointer() *DestinationCreateAWSKinesisType {
	return &e
}
func (e *DestinationCreateAWSKinesisType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aws_kinesis":
		*e = DestinationCreateAWSKinesisType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DestinationCreateAWSKinesisType: %v", v)
	}
}

type DestinationCreateAWSKinesis struct {
	// Optional user-provided ID. A UUID will be generated if empty.
	ID *string `json:"id,omitempty"`
	// Type of the destination. Must be 'aws_kinesis'.
	Type DestinationCreateAWSKinesisType `json:"type"`
	// "*" or an array of enabled topics.
	Topics      Topics                `json:"topics"`
	Config      AWSKinesisConfig      `json:"config"`
	Credentials AWSKinesisCredentials `json:"credentials"`
}

func (o *DestinationCreateAWSKinesis) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *DestinationCreateAWSKinesis) GetType() DestinationCreateAWSKinesisType {
	if o == nil {
		return DestinationCreateAWSKinesisType("")
	}
	return o.Type
}

func (o *DestinationCreateAWSKinesis) GetTopics() Topics {
	if o == nil {
		return Topics{}
	}
	return o.Topics
}

func (o *DestinationCreateAWSKinesis) GetConfig() AWSKinesisConfig {
	if o == nil {
		return AWSKinesisConfig{}
	}
	return o.Config
}

func (o *DestinationCreateAWSKinesis) GetCredentials() AWSKinesisCredentials {
	if o == nil {
		return AWSKinesisCredentials{}
	}
	return o.Credentials
}
