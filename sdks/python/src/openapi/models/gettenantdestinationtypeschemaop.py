"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from enum import Enum
from openapi.types import BaseModel
from openapi.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetTenantDestinationTypeSchemaGlobalsTypedDict(TypedDict):
    tenant_id: NotRequired[str]


class GetTenantDestinationTypeSchemaGlobals(BaseModel):
    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None


class GetTenantDestinationTypeSchemaSecurityTypedDict(TypedDict):
    admin_api_key: NotRequired[str]
    tenant_jwt: NotRequired[str]


class GetTenantDestinationTypeSchemaSecurity(BaseModel):
    admin_api_key: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None

    tenant_jwt: Annotated[
        Optional[str],
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="http",
                sub_type="bearer",
                field_name="Authorization",
            )
        ),
    ] = None


class GetTenantDestinationTypeSchemaType(str, Enum):
    r"""The type of the destination."""

    WEBHOOK = "webhook"
    AWS_SQS = "aws_sqs"
    RABBITMQ = "rabbitmq"
    HOOKDECK = "hookdeck"
    AWS_KINESIS = "aws_kinesis"


class GetTenantDestinationTypeSchemaRequestTypedDict(TypedDict):
    type: GetTenantDestinationTypeSchemaType
    r"""The type of the destination."""
    tenant_id: NotRequired[str]
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""


class GetTenantDestinationTypeSchemaRequest(BaseModel):
    type: Annotated[
        GetTenantDestinationTypeSchemaType,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""The type of the destination."""

    tenant_id: Annotated[
        Optional[str],
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ] = None
    r"""The ID of the tenant. Required when using AdminApiKey authentication."""
