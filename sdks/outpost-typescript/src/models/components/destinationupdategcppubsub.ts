/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  GCPPubSubConfig,
  GCPPubSubConfig$inboundSchema,
  GCPPubSubConfig$Outbound,
  GCPPubSubConfig$outboundSchema,
} from "./gcppubsubconfig.js";
import {
  GCPPubSubCredentials,
  GCPPubSubCredentials$inboundSchema,
  GCPPubSubCredentials$Outbound,
  GCPPubSubCredentials$outboundSchema,
} from "./gcppubsubcredentials.js";
import {
  Topics,
  Topics$inboundSchema,
  Topics$Outbound,
  Topics$outboundSchema,
} from "./topics.js";

export type DestinationUpdateGCPPubSub = {
  /**
   * "*" or an array of enabled topics.
   */
  topics?: Topics | undefined;
  config?: GCPPubSubConfig | undefined;
  credentials?: GCPPubSubCredentials | undefined;
};

/** @internal */
export const DestinationUpdateGCPPubSub$inboundSchema: z.ZodType<
  DestinationUpdateGCPPubSub,
  z.ZodTypeDef,
  unknown
> = z.object({
  topics: Topics$inboundSchema.optional(),
  config: GCPPubSubConfig$inboundSchema.optional(),
  credentials: GCPPubSubCredentials$inboundSchema.optional(),
});

/** @internal */
export type DestinationUpdateGCPPubSub$Outbound = {
  topics?: Topics$Outbound | undefined;
  config?: GCPPubSubConfig$Outbound | undefined;
  credentials?: GCPPubSubCredentials$Outbound | undefined;
};

/** @internal */
export const DestinationUpdateGCPPubSub$outboundSchema: z.ZodType<
  DestinationUpdateGCPPubSub$Outbound,
  z.ZodTypeDef,
  DestinationUpdateGCPPubSub
> = z.object({
  topics: Topics$outboundSchema.optional(),
  config: GCPPubSubConfig$outboundSchema.optional(),
  credentials: GCPPubSubCredentials$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationUpdateGCPPubSub$ {
  /** @deprecated use `DestinationUpdateGCPPubSub$inboundSchema` instead. */
  export const inboundSchema = DestinationUpdateGCPPubSub$inboundSchema;
  /** @deprecated use `DestinationUpdateGCPPubSub$outboundSchema` instead. */
  export const outboundSchema = DestinationUpdateGCPPubSub$outboundSchema;
  /** @deprecated use `DestinationUpdateGCPPubSub$Outbound` instead. */
  export type Outbound = DestinationUpdateGCPPubSub$Outbound;
}

export function destinationUpdateGCPPubSubToJSON(
  destinationUpdateGCPPubSub: DestinationUpdateGCPPubSub,
): string {
  return JSON.stringify(
    DestinationUpdateGCPPubSub$outboundSchema.parse(destinationUpdateGCPPubSub),
  );
}

export function destinationUpdateGCPPubSubFromJSON(
  jsonString: string,
): SafeParseResult<DestinationUpdateGCPPubSub, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationUpdateGCPPubSub$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationUpdateGCPPubSub' from JSON`,
  );
}
