/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  Awss3Config,
  Awss3Config$inboundSchema,
  Awss3Config$Outbound,
  Awss3Config$outboundSchema,
} from "./awss3config.js";
import {
  Awss3Credentials,
  Awss3Credentials$inboundSchema,
  Awss3Credentials$Outbound,
  Awss3Credentials$outboundSchema,
} from "./awss3credentials.js";
import {
  Topics,
  Topics$inboundSchema,
  Topics$Outbound,
  Topics$outboundSchema,
} from "./topics.js";

export type DestinationUpdateAwss3 = {
  /**
   * "*" or an array of enabled topics.
   */
  topics?: Topics | undefined;
  config?: Awss3Config | undefined;
  credentials?: Awss3Credentials | undefined;
};

/** @internal */
export const DestinationUpdateAwss3$inboundSchema: z.ZodType<
  DestinationUpdateAwss3,
  z.ZodTypeDef,
  unknown
> = z.object({
  topics: Topics$inboundSchema.optional(),
  config: Awss3Config$inboundSchema.optional(),
  credentials: Awss3Credentials$inboundSchema.optional(),
});

/** @internal */
export type DestinationUpdateAwss3$Outbound = {
  topics?: Topics$Outbound | undefined;
  config?: Awss3Config$Outbound | undefined;
  credentials?: Awss3Credentials$Outbound | undefined;
};

/** @internal */
export const DestinationUpdateAwss3$outboundSchema: z.ZodType<
  DestinationUpdateAwss3$Outbound,
  z.ZodTypeDef,
  DestinationUpdateAwss3
> = z.object({
  topics: Topics$outboundSchema.optional(),
  config: Awss3Config$outboundSchema.optional(),
  credentials: Awss3Credentials$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationUpdateAwss3$ {
  /** @deprecated use `DestinationUpdateAwss3$inboundSchema` instead. */
  export const inboundSchema = DestinationUpdateAwss3$inboundSchema;
  /** @deprecated use `DestinationUpdateAwss3$outboundSchema` instead. */
  export const outboundSchema = DestinationUpdateAwss3$outboundSchema;
  /** @deprecated use `DestinationUpdateAwss3$Outbound` instead. */
  export type Outbound = DestinationUpdateAwss3$Outbound;
}

export function destinationUpdateAwss3ToJSON(
  destinationUpdateAwss3: DestinationUpdateAwss3,
): string {
  return JSON.stringify(
    DestinationUpdateAwss3$outboundSchema.parse(destinationUpdateAwss3),
  );
}

export function destinationUpdateAwss3FromJSON(
  jsonString: string,
): SafeParseResult<DestinationUpdateAwss3, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationUpdateAwss3$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationUpdateAwss3' from JSON`,
  );
}
