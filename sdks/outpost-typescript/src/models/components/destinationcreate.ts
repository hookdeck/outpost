/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DestinationCreateAWSKinesis,
  DestinationCreateAWSKinesis$inboundSchema,
  DestinationCreateAWSKinesis$Outbound,
  DestinationCreateAWSKinesis$outboundSchema,
} from "./destinationcreateawskinesis.js";
import {
  DestinationCreateAwss3,
  DestinationCreateAwss3$inboundSchema,
  DestinationCreateAwss3$Outbound,
  DestinationCreateAwss3$outboundSchema,
} from "./destinationcreateawss3.js";
import {
  DestinationCreateAWSSQS,
  DestinationCreateAWSSQS$inboundSchema,
  DestinationCreateAWSSQS$Outbound,
  DestinationCreateAWSSQS$outboundSchema,
} from "./destinationcreateawssqs.js";
import {
  DestinationCreateAzureServiceBus,
  DestinationCreateAzureServiceBus$inboundSchema,
  DestinationCreateAzureServiceBus$Outbound,
  DestinationCreateAzureServiceBus$outboundSchema,
} from "./destinationcreateazureservicebus.js";
import {
  DestinationCreateHookdeck,
  DestinationCreateHookdeck$inboundSchema,
  DestinationCreateHookdeck$Outbound,
  DestinationCreateHookdeck$outboundSchema,
} from "./destinationcreatehookdeck.js";
import {
  DestinationCreateRabbitMQ,
  DestinationCreateRabbitMQ$inboundSchema,
  DestinationCreateRabbitMQ$Outbound,
  DestinationCreateRabbitMQ$outboundSchema,
} from "./destinationcreaterabbitmq.js";
import {
  DestinationCreateWebhook,
  DestinationCreateWebhook$inboundSchema,
  DestinationCreateWebhook$Outbound,
  DestinationCreateWebhook$outboundSchema,
} from "./destinationcreatewebhook.js";

export type DestinationCreate =
  | (DestinationCreateAWSSQS & { type: "aws_sqs" })
  | (DestinationCreateRabbitMQ & { type: "rabbitmq" })
  | (DestinationCreateAWSKinesis & { type: "aws_kinesis" })
  | (DestinationCreateAzureServiceBus & { type: "azure_servicebus" })
  | (DestinationCreateAwss3 & { type: "aws_s3" })
  | (DestinationCreateWebhook & { type: "webhook" })
  | (DestinationCreateHookdeck & { type: "hookdeck" });

/** @internal */
export const DestinationCreate$inboundSchema: z.ZodType<
  DestinationCreate,
  z.ZodTypeDef,
  unknown
> = z.union([
  DestinationCreateAWSSQS$inboundSchema.and(
    z.object({ type: z.literal("aws_sqs") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateRabbitMQ$inboundSchema.and(
    z.object({ type: z.literal("rabbitmq") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAWSKinesis$inboundSchema.and(
    z.object({ type: z.literal("aws_kinesis") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAzureServiceBus$inboundSchema.and(
    z.object({ type: z.literal("azure_servicebus") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAwss3$inboundSchema.and(
    z.object({ type: z.literal("aws_s3") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateWebhook$inboundSchema.and(
    z.object({ type: z.literal("webhook") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateHookdeck$inboundSchema.and(
    z.object({ type: z.literal("hookdeck") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/** @internal */
export type DestinationCreate$Outbound =
  | (DestinationCreateAWSSQS$Outbound & { type: "aws_sqs" })
  | (DestinationCreateRabbitMQ$Outbound & { type: "rabbitmq" })
  | (DestinationCreateAWSKinesis$Outbound & { type: "aws_kinesis" })
  | (DestinationCreateAzureServiceBus$Outbound & { type: "azure_servicebus" })
  | (DestinationCreateAwss3$Outbound & { type: "aws_s3" })
  | (DestinationCreateWebhook$Outbound & { type: "webhook" })
  | (DestinationCreateHookdeck$Outbound & { type: "hookdeck" });

/** @internal */
export const DestinationCreate$outboundSchema: z.ZodType<
  DestinationCreate$Outbound,
  z.ZodTypeDef,
  DestinationCreate
> = z.union([
  DestinationCreateAWSSQS$outboundSchema.and(
    z.object({ type: z.literal("aws_sqs") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateRabbitMQ$outboundSchema.and(
    z.object({ type: z.literal("rabbitmq") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAWSKinesis$outboundSchema.and(
    z.object({ type: z.literal("aws_kinesis") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAzureServiceBus$outboundSchema.and(
    z.object({ type: z.literal("azure_servicebus") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateAwss3$outboundSchema.and(
    z.object({ type: z.literal("aws_s3") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateWebhook$outboundSchema.and(
    z.object({ type: z.literal("webhook") }).transform((v) => ({
      type: v.type,
    })),
  ),
  DestinationCreateHookdeck$outboundSchema.and(
    z.object({ type: z.literal("hookdeck") }).transform((v) => ({
      type: v.type,
    })),
  ),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationCreate$ {
  /** @deprecated use `DestinationCreate$inboundSchema` instead. */
  export const inboundSchema = DestinationCreate$inboundSchema;
  /** @deprecated use `DestinationCreate$outboundSchema` instead. */
  export const outboundSchema = DestinationCreate$outboundSchema;
  /** @deprecated use `DestinationCreate$Outbound` instead. */
  export type Outbound = DestinationCreate$Outbound;
}

export function destinationCreateToJSON(
  destinationCreate: DestinationCreate,
): string {
  return JSON.stringify(
    DestinationCreate$outboundSchema.parse(destinationCreate),
  );
}

export function destinationCreateFromJSON(
  jsonString: string,
): SafeParseResult<DestinationCreate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationCreate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationCreate' from JSON`,
  );
}
