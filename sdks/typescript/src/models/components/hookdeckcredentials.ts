/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type HookdeckCredentials = {
  /**
   * Hookdeck authentication token.
   */
  token: string;
};

/** @internal */
export const HookdeckCredentials$inboundSchema: z.ZodType<
  HookdeckCredentials,
  z.ZodTypeDef,
  unknown
> = z.object({
  token: z.string(),
});

/** @internal */
export type HookdeckCredentials$Outbound = {
  token: string;
};

/** @internal */
export const HookdeckCredentials$outboundSchema: z.ZodType<
  HookdeckCredentials$Outbound,
  z.ZodTypeDef,
  HookdeckCredentials
> = z.object({
  token: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace HookdeckCredentials$ {
  /** @deprecated use `HookdeckCredentials$inboundSchema` instead. */
  export const inboundSchema = HookdeckCredentials$inboundSchema;
  /** @deprecated use `HookdeckCredentials$outboundSchema` instead. */
  export const outboundSchema = HookdeckCredentials$outboundSchema;
  /** @deprecated use `HookdeckCredentials$Outbound` instead. */
  export type Outbound = HookdeckCredentials$Outbound;
}

export function hookdeckCredentialsToJSON(
  hookdeckCredentials: HookdeckCredentials,
): string {
  return JSON.stringify(
    HookdeckCredentials$outboundSchema.parse(hookdeckCredentials),
  );
}

export function hookdeckCredentialsFromJSON(
  jsonString: string,
): SafeParseResult<HookdeckCredentials, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => HookdeckCredentials$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'HookdeckCredentials' from JSON`,
  );
}
