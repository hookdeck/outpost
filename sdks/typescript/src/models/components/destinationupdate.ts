/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  DestinationUpdateAWSKinesis,
  DestinationUpdateAWSKinesis$inboundSchema,
  DestinationUpdateAWSKinesis$Outbound,
  DestinationUpdateAWSKinesis$outboundSchema,
} from "./destinationupdateawskinesis.js";
import {
  DestinationUpdateAWSSQS,
  DestinationUpdateAWSSQS$inboundSchema,
  DestinationUpdateAWSSQS$Outbound,
  DestinationUpdateAWSSQS$outboundSchema,
} from "./destinationupdateawssqs.js";
import {
  DestinationUpdateHookdeck,
  DestinationUpdateHookdeck$inboundSchema,
  DestinationUpdateHookdeck$Outbound,
  DestinationUpdateHookdeck$outboundSchema,
} from "./destinationupdatehookdeck.js";
import {
  DestinationUpdateRabbitMQ,
  DestinationUpdateRabbitMQ$inboundSchema,
  DestinationUpdateRabbitMQ$Outbound,
  DestinationUpdateRabbitMQ$outboundSchema,
} from "./destinationupdaterabbitmq.js";
import {
  DestinationUpdateWebhook,
  DestinationUpdateWebhook$inboundSchema,
  DestinationUpdateWebhook$Outbound,
  DestinationUpdateWebhook$outboundSchema,
} from "./destinationupdatewebhook.js";

export type DestinationUpdate =
  | DestinationUpdateWebhook
  | DestinationUpdateAWSSQS
  | DestinationUpdateRabbitMQ
  | DestinationUpdateHookdeck
  | DestinationUpdateAWSKinesis;

/** @internal */
export const DestinationUpdate$inboundSchema: z.ZodType<
  DestinationUpdate,
  z.ZodTypeDef,
  unknown
> = z.union([
  DestinationUpdateWebhook$inboundSchema,
  DestinationUpdateAWSSQS$inboundSchema,
  DestinationUpdateRabbitMQ$inboundSchema,
  DestinationUpdateHookdeck$inboundSchema,
  DestinationUpdateAWSKinesis$inboundSchema,
]);

/** @internal */
export type DestinationUpdate$Outbound =
  | DestinationUpdateWebhook$Outbound
  | DestinationUpdateAWSSQS$Outbound
  | DestinationUpdateRabbitMQ$Outbound
  | DestinationUpdateHookdeck$Outbound
  | DestinationUpdateAWSKinesis$Outbound;

/** @internal */
export const DestinationUpdate$outboundSchema: z.ZodType<
  DestinationUpdate$Outbound,
  z.ZodTypeDef,
  DestinationUpdate
> = z.union([
  DestinationUpdateWebhook$outboundSchema,
  DestinationUpdateAWSSQS$outboundSchema,
  DestinationUpdateRabbitMQ$outboundSchema,
  DestinationUpdateHookdeck$outboundSchema,
  DestinationUpdateAWSKinesis$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationUpdate$ {
  /** @deprecated use `DestinationUpdate$inboundSchema` instead. */
  export const inboundSchema = DestinationUpdate$inboundSchema;
  /** @deprecated use `DestinationUpdate$outboundSchema` instead. */
  export const outboundSchema = DestinationUpdate$outboundSchema;
  /** @deprecated use `DestinationUpdate$Outbound` instead. */
  export type Outbound = DestinationUpdate$Outbound;
}

export function destinationUpdateToJSON(
  destinationUpdate: DestinationUpdate,
): string {
  return JSON.stringify(
    DestinationUpdate$outboundSchema.parse(destinationUpdate),
  );
}

export function destinationUpdateFromJSON(
  jsonString: string,
): SafeParseResult<DestinationUpdate, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationUpdate$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationUpdate' from JSON`,
  );
}
