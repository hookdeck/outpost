/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import {
  AWSKinesisConfig,
  AWSKinesisConfig$inboundSchema,
  AWSKinesisConfig$Outbound,
  AWSKinesisConfig$outboundSchema,
} from "./awskinesisconfig.js";
import {
  AWSKinesisCredentials,
  AWSKinesisCredentials$inboundSchema,
  AWSKinesisCredentials$Outbound,
  AWSKinesisCredentials$outboundSchema,
} from "./awskinesiscredentials.js";
import {
  Topics,
  Topics$inboundSchema,
  Topics$Outbound,
  Topics$outboundSchema,
} from "./topics.js";

export type DestinationUpdateAWSKinesis = {
  /**
   * "*" or an array of enabled topics.
   */
  topics?: Topics | undefined;
  config?: AWSKinesisConfig | undefined;
  credentials?: AWSKinesisCredentials | undefined;
};

/** @internal */
export const DestinationUpdateAWSKinesis$inboundSchema: z.ZodType<
  DestinationUpdateAWSKinesis,
  z.ZodTypeDef,
  unknown
> = z.object({
  topics: Topics$inboundSchema.optional(),
  config: AWSKinesisConfig$inboundSchema.optional(),
  credentials: AWSKinesisCredentials$inboundSchema.optional(),
});

/** @internal */
export type DestinationUpdateAWSKinesis$Outbound = {
  topics?: Topics$Outbound | undefined;
  config?: AWSKinesisConfig$Outbound | undefined;
  credentials?: AWSKinesisCredentials$Outbound | undefined;
};

/** @internal */
export const DestinationUpdateAWSKinesis$outboundSchema: z.ZodType<
  DestinationUpdateAWSKinesis$Outbound,
  z.ZodTypeDef,
  DestinationUpdateAWSKinesis
> = z.object({
  topics: Topics$outboundSchema.optional(),
  config: AWSKinesisConfig$outboundSchema.optional(),
  credentials: AWSKinesisCredentials$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DestinationUpdateAWSKinesis$ {
  /** @deprecated use `DestinationUpdateAWSKinesis$inboundSchema` instead. */
  export const inboundSchema = DestinationUpdateAWSKinesis$inboundSchema;
  /** @deprecated use `DestinationUpdateAWSKinesis$outboundSchema` instead. */
  export const outboundSchema = DestinationUpdateAWSKinesis$outboundSchema;
  /** @deprecated use `DestinationUpdateAWSKinesis$Outbound` instead. */
  export type Outbound = DestinationUpdateAWSKinesis$Outbound;
}

export function destinationUpdateAWSKinesisToJSON(
  destinationUpdateAWSKinesis: DestinationUpdateAWSKinesis,
): string {
  return JSON.stringify(
    DestinationUpdateAWSKinesis$outboundSchema.parse(
      destinationUpdateAWSKinesis,
    ),
  );
}

export function destinationUpdateAWSKinesisFromJSON(
  jsonString: string,
): SafeParseResult<DestinationUpdateAWSKinesis, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DestinationUpdateAWSKinesis$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DestinationUpdateAWSKinesis' from JSON`,
  );
}
